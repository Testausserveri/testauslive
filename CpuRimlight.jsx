/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.5.3 public/models/cpuRimlight.glb 
*/

import React from 'react'
import { useGraph } from '@react-three/fiber'
import { useGLTF, PerspectiveCamera } from '@react-three/drei'
import { SkeletonUtils } from 'three-stdlib'

export function Model(props) {
  const { scene } = useGLTF('/cpuRimlight.glb')
  const clone = React.useMemo(() => SkeletonUtils.clone(scene), [scene])
  const { nodes, materials } = useGraph(clone)
  return (
    <group {...props} dispose={null}>
      <group rotation={[0, 0, -0.086]} scale={0.091}>
        <mesh geometry={nodes.Plane.geometry} material={materials.PrintedCircuitBoard} rotation={[0, 0, -1.114]} scale={10.971} />
      </group>
      <PerspectiveCamera makeDefault={false} far={1000} near={0.1} fov={22.895} position={[0.239, -0.084, 0.255]} rotation={[0.352, 0.736, -0.242]} />
      <spotLight intensity={54351.413} angle={Math.PI / 8} penumbra={0.698} decay={2} position={[-0.305, -0.25, 0]} rotation={[1.458, -0.988, -3.096]} target={nodes.Area.target}>
        <primitive object={nodes.Area.target} position={[0, 0, -1]} />
      </spotLight>
      <spotLight intensity={4706.832} angle={Math.PI / 8} penumbra={0.15} decay={2} position={[0.792, -0.781, -1.744]} rotation={[2.733, 0.394, 1.985]} target={nodes.Area001.target}>
        <primitive object={nodes.Area001.target} position={[0, 0, -1]} />
      </spotLight>
      <spotLight intensity={5435.141} angle={Math.PI / 8} penumbra={0.15} decay={2} position={[0.792, -0.781, 2.905]} rotation={[0.261, 0.257, -1.678]} target={nodes.Area002.target}>
        <primitive object={nodes.Area002.target} position={[0, 0, -1]} />
      </spotLight>
    </group>
  )
}

useGLTF.preload('/cpuRimlight.glb')
